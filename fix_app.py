from app import app, database
from werkzeug.security import generate_password_hash
import traceback
import sys

def main():
    """Main function to initialize the application safely"""
    print("üöÄ Iniciando configura√ß√£o da aplica√ß√£o...")
    
    # Inicializar o banco dentro do contexto da aplica√ß√£o
    with app.app_context():
        try:
            # Inicializar banco
            print("üìã Inicializando banco de dados...")
            database.init_db()
            print("‚úÖ Banco inicializado com sucesso")
            
            # Criar usu√°rio teste se n√£o existir
            print("üë§ Criando usu√°rio admin...")
            try:
                database.create_user('admin', generate_password_hash('123456'))
                print("‚úÖ Usu√°rio admin criado com sucesso")
            except Exception as e:
                print(f"‚ÑπÔ∏è Usu√°rio admin: {str(e)}")
                
            # Criar alguns executivos se n√£o existirem
            print("üëî Criando executivos...")
            try:
                database.create_executive('Jo√£o Silva', 'CR√çTICO')
                database.create_executive('Maria Santos', 'M√âDIO')  
                database.create_executive('Pedro Oliveira', 'BAIXO')
                print("‚úÖ Executivos criados com sucesso")
            except Exception as e:
                print(f"‚ÑπÔ∏è Executivos: {str(e)}")
                
            # Criar alguns itens
            print("üìù Criando itens de exemplo...")
            try:
                executives = database.get_all_executives()
                print(f"üìä Encontrados {len(executives)} executivos")
                
                if executives and len(executives) >= 2:
                    database.create_item(
                        executives[0][0], 'Item Cr√≠tico', 'Descri√ß√£o cr√≠tica', 
                        'NEGATIVO', 'CR√çTICO', 'PENDENTE', '2025-07-22'
                    )
                    database.create_item(
                        executives[1][0], 'Item M√©dio', 'Descri√ß√£o m√©dia', 
                        'POSITIVO', 'M√âDIO', 'PENDENTE', '2025-07-22'
                    )
                    print("‚úÖ Itens criados com sucesso")
                else:
                    print("‚ö†Ô∏è N√£o h√° executivos suficientes para criar itens")
                    
            except Exception as e:
                print(f"‚ùå Erro ao criar itens: {str(e)}")
                traceback.print_exc()
                
            print("üéâ Configura√ß√£o da aplica√ß√£o conclu√≠da!")
            return True
            
        except Exception as e:
            print(f"‚ùå Erro cr√≠tico ao configurar aplica√ß√£o: {str(e)}")
            traceback.print_exc()
            return False

if __name__ == "__main__":
    try:
        success = main()
        if success:
            print("‚ú® Script executado com sucesso!")
            sys.exit(0)
        else:
            print("üí• Script falhou!")
            sys.exit(1)
    except Exception as e:
        print(f"üö® Erro fatal: {str(e)}")
        traceback.print_exc()
        sys.exit(1)